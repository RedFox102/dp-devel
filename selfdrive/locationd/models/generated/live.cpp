#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2021545193082224962) {
   out_2021545193082224962[0] = 0;
   out_2021545193082224962[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2021545193082224962[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2021545193082224962[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2021545193082224962[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2021545193082224962[5] = -sin(in_vec[1]);
   out_2021545193082224962[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2021545193082224962[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2021545193082224962[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2021545193082224962[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2021545193082224962[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2021545193082224962[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2021545193082224962[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2021545193082224962[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2021545193082224962[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2021545193082224962[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2021545193082224962[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2021545193082224962[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_683457954489119670) {
   out_683457954489119670[0] = delta_x[0] + nom_x[0];
   out_683457954489119670[1] = delta_x[1] + nom_x[1];
   out_683457954489119670[2] = delta_x[2] + nom_x[2];
   out_683457954489119670[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_683457954489119670[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_683457954489119670[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_683457954489119670[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_683457954489119670[7] = delta_x[6] + nom_x[7];
   out_683457954489119670[8] = delta_x[7] + nom_x[8];
   out_683457954489119670[9] = delta_x[8] + nom_x[9];
   out_683457954489119670[10] = delta_x[9] + nom_x[10];
   out_683457954489119670[11] = delta_x[10] + nom_x[11];
   out_683457954489119670[12] = delta_x[11] + nom_x[12];
   out_683457954489119670[13] = delta_x[12] + nom_x[13];
   out_683457954489119670[14] = delta_x[13] + nom_x[14];
   out_683457954489119670[15] = delta_x[14] + nom_x[15];
   out_683457954489119670[16] = delta_x[15] + nom_x[16];
   out_683457954489119670[17] = delta_x[16] + nom_x[17];
   out_683457954489119670[18] = delta_x[17] + nom_x[18];
   out_683457954489119670[19] = delta_x[18] + nom_x[19];
   out_683457954489119670[20] = delta_x[19] + nom_x[20];
   out_683457954489119670[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2290656940267729341) {
   out_2290656940267729341[0] = -nom_x[0] + true_x[0];
   out_2290656940267729341[1] = -nom_x[1] + true_x[1];
   out_2290656940267729341[2] = -nom_x[2] + true_x[2];
   out_2290656940267729341[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2290656940267729341[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2290656940267729341[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2290656940267729341[6] = -nom_x[7] + true_x[7];
   out_2290656940267729341[7] = -nom_x[8] + true_x[8];
   out_2290656940267729341[8] = -nom_x[9] + true_x[9];
   out_2290656940267729341[9] = -nom_x[10] + true_x[10];
   out_2290656940267729341[10] = -nom_x[11] + true_x[11];
   out_2290656940267729341[11] = -nom_x[12] + true_x[12];
   out_2290656940267729341[12] = -nom_x[13] + true_x[13];
   out_2290656940267729341[13] = -nom_x[14] + true_x[14];
   out_2290656940267729341[14] = -nom_x[15] + true_x[15];
   out_2290656940267729341[15] = -nom_x[16] + true_x[16];
   out_2290656940267729341[16] = -nom_x[17] + true_x[17];
   out_2290656940267729341[17] = -nom_x[18] + true_x[18];
   out_2290656940267729341[18] = -nom_x[19] + true_x[19];
   out_2290656940267729341[19] = -nom_x[20] + true_x[20];
   out_2290656940267729341[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1415390971775915258) {
   out_1415390971775915258[0] = 1.0;
   out_1415390971775915258[1] = 0;
   out_1415390971775915258[2] = 0;
   out_1415390971775915258[3] = 0;
   out_1415390971775915258[4] = 0;
   out_1415390971775915258[5] = 0;
   out_1415390971775915258[6] = 0;
   out_1415390971775915258[7] = 0;
   out_1415390971775915258[8] = 0;
   out_1415390971775915258[9] = 0;
   out_1415390971775915258[10] = 0;
   out_1415390971775915258[11] = 0;
   out_1415390971775915258[12] = 0;
   out_1415390971775915258[13] = 0;
   out_1415390971775915258[14] = 0;
   out_1415390971775915258[15] = 0;
   out_1415390971775915258[16] = 0;
   out_1415390971775915258[17] = 0;
   out_1415390971775915258[18] = 0;
   out_1415390971775915258[19] = 0;
   out_1415390971775915258[20] = 0;
   out_1415390971775915258[21] = 0;
   out_1415390971775915258[22] = 1.0;
   out_1415390971775915258[23] = 0;
   out_1415390971775915258[24] = 0;
   out_1415390971775915258[25] = 0;
   out_1415390971775915258[26] = 0;
   out_1415390971775915258[27] = 0;
   out_1415390971775915258[28] = 0;
   out_1415390971775915258[29] = 0;
   out_1415390971775915258[30] = 0;
   out_1415390971775915258[31] = 0;
   out_1415390971775915258[32] = 0;
   out_1415390971775915258[33] = 0;
   out_1415390971775915258[34] = 0;
   out_1415390971775915258[35] = 0;
   out_1415390971775915258[36] = 0;
   out_1415390971775915258[37] = 0;
   out_1415390971775915258[38] = 0;
   out_1415390971775915258[39] = 0;
   out_1415390971775915258[40] = 0;
   out_1415390971775915258[41] = 0;
   out_1415390971775915258[42] = 0;
   out_1415390971775915258[43] = 0;
   out_1415390971775915258[44] = 1.0;
   out_1415390971775915258[45] = 0;
   out_1415390971775915258[46] = 0;
   out_1415390971775915258[47] = 0;
   out_1415390971775915258[48] = 0;
   out_1415390971775915258[49] = 0;
   out_1415390971775915258[50] = 0;
   out_1415390971775915258[51] = 0;
   out_1415390971775915258[52] = 0;
   out_1415390971775915258[53] = 0;
   out_1415390971775915258[54] = 0;
   out_1415390971775915258[55] = 0;
   out_1415390971775915258[56] = 0;
   out_1415390971775915258[57] = 0;
   out_1415390971775915258[58] = 0;
   out_1415390971775915258[59] = 0;
   out_1415390971775915258[60] = 0;
   out_1415390971775915258[61] = 0;
   out_1415390971775915258[62] = 0;
   out_1415390971775915258[63] = 0;
   out_1415390971775915258[64] = 0;
   out_1415390971775915258[65] = 0;
   out_1415390971775915258[66] = -0.5*state[4];
   out_1415390971775915258[67] = -0.5*state[5];
   out_1415390971775915258[68] = -0.5*state[6];
   out_1415390971775915258[69] = 0;
   out_1415390971775915258[70] = 0;
   out_1415390971775915258[71] = 0;
   out_1415390971775915258[72] = 0;
   out_1415390971775915258[73] = 0;
   out_1415390971775915258[74] = 0;
   out_1415390971775915258[75] = 0;
   out_1415390971775915258[76] = 0;
   out_1415390971775915258[77] = 0;
   out_1415390971775915258[78] = 0;
   out_1415390971775915258[79] = 0;
   out_1415390971775915258[80] = 0;
   out_1415390971775915258[81] = 0;
   out_1415390971775915258[82] = 0;
   out_1415390971775915258[83] = 0;
   out_1415390971775915258[84] = 0;
   out_1415390971775915258[85] = 0;
   out_1415390971775915258[86] = 0;
   out_1415390971775915258[87] = 0.5*state[3];
   out_1415390971775915258[88] = 0.5*state[6];
   out_1415390971775915258[89] = -0.5*state[5];
   out_1415390971775915258[90] = 0;
   out_1415390971775915258[91] = 0;
   out_1415390971775915258[92] = 0;
   out_1415390971775915258[93] = 0;
   out_1415390971775915258[94] = 0;
   out_1415390971775915258[95] = 0;
   out_1415390971775915258[96] = 0;
   out_1415390971775915258[97] = 0;
   out_1415390971775915258[98] = 0;
   out_1415390971775915258[99] = 0;
   out_1415390971775915258[100] = 0;
   out_1415390971775915258[101] = 0;
   out_1415390971775915258[102] = 0;
   out_1415390971775915258[103] = 0;
   out_1415390971775915258[104] = 0;
   out_1415390971775915258[105] = 0;
   out_1415390971775915258[106] = 0;
   out_1415390971775915258[107] = 0;
   out_1415390971775915258[108] = -0.5*state[6];
   out_1415390971775915258[109] = 0.5*state[3];
   out_1415390971775915258[110] = 0.5*state[4];
   out_1415390971775915258[111] = 0;
   out_1415390971775915258[112] = 0;
   out_1415390971775915258[113] = 0;
   out_1415390971775915258[114] = 0;
   out_1415390971775915258[115] = 0;
   out_1415390971775915258[116] = 0;
   out_1415390971775915258[117] = 0;
   out_1415390971775915258[118] = 0;
   out_1415390971775915258[119] = 0;
   out_1415390971775915258[120] = 0;
   out_1415390971775915258[121] = 0;
   out_1415390971775915258[122] = 0;
   out_1415390971775915258[123] = 0;
   out_1415390971775915258[124] = 0;
   out_1415390971775915258[125] = 0;
   out_1415390971775915258[126] = 0;
   out_1415390971775915258[127] = 0;
   out_1415390971775915258[128] = 0;
   out_1415390971775915258[129] = 0.5*state[5];
   out_1415390971775915258[130] = -0.5*state[4];
   out_1415390971775915258[131] = 0.5*state[3];
   out_1415390971775915258[132] = 0;
   out_1415390971775915258[133] = 0;
   out_1415390971775915258[134] = 0;
   out_1415390971775915258[135] = 0;
   out_1415390971775915258[136] = 0;
   out_1415390971775915258[137] = 0;
   out_1415390971775915258[138] = 0;
   out_1415390971775915258[139] = 0;
   out_1415390971775915258[140] = 0;
   out_1415390971775915258[141] = 0;
   out_1415390971775915258[142] = 0;
   out_1415390971775915258[143] = 0;
   out_1415390971775915258[144] = 0;
   out_1415390971775915258[145] = 0;
   out_1415390971775915258[146] = 0;
   out_1415390971775915258[147] = 0;
   out_1415390971775915258[148] = 0;
   out_1415390971775915258[149] = 0;
   out_1415390971775915258[150] = 0;
   out_1415390971775915258[151] = 0;
   out_1415390971775915258[152] = 0;
   out_1415390971775915258[153] = 1.0;
   out_1415390971775915258[154] = 0;
   out_1415390971775915258[155] = 0;
   out_1415390971775915258[156] = 0;
   out_1415390971775915258[157] = 0;
   out_1415390971775915258[158] = 0;
   out_1415390971775915258[159] = 0;
   out_1415390971775915258[160] = 0;
   out_1415390971775915258[161] = 0;
   out_1415390971775915258[162] = 0;
   out_1415390971775915258[163] = 0;
   out_1415390971775915258[164] = 0;
   out_1415390971775915258[165] = 0;
   out_1415390971775915258[166] = 0;
   out_1415390971775915258[167] = 0;
   out_1415390971775915258[168] = 0;
   out_1415390971775915258[169] = 0;
   out_1415390971775915258[170] = 0;
   out_1415390971775915258[171] = 0;
   out_1415390971775915258[172] = 0;
   out_1415390971775915258[173] = 0;
   out_1415390971775915258[174] = 0;
   out_1415390971775915258[175] = 1.0;
   out_1415390971775915258[176] = 0;
   out_1415390971775915258[177] = 0;
   out_1415390971775915258[178] = 0;
   out_1415390971775915258[179] = 0;
   out_1415390971775915258[180] = 0;
   out_1415390971775915258[181] = 0;
   out_1415390971775915258[182] = 0;
   out_1415390971775915258[183] = 0;
   out_1415390971775915258[184] = 0;
   out_1415390971775915258[185] = 0;
   out_1415390971775915258[186] = 0;
   out_1415390971775915258[187] = 0;
   out_1415390971775915258[188] = 0;
   out_1415390971775915258[189] = 0;
   out_1415390971775915258[190] = 0;
   out_1415390971775915258[191] = 0;
   out_1415390971775915258[192] = 0;
   out_1415390971775915258[193] = 0;
   out_1415390971775915258[194] = 0;
   out_1415390971775915258[195] = 0;
   out_1415390971775915258[196] = 0;
   out_1415390971775915258[197] = 1.0;
   out_1415390971775915258[198] = 0;
   out_1415390971775915258[199] = 0;
   out_1415390971775915258[200] = 0;
   out_1415390971775915258[201] = 0;
   out_1415390971775915258[202] = 0;
   out_1415390971775915258[203] = 0;
   out_1415390971775915258[204] = 0;
   out_1415390971775915258[205] = 0;
   out_1415390971775915258[206] = 0;
   out_1415390971775915258[207] = 0;
   out_1415390971775915258[208] = 0;
   out_1415390971775915258[209] = 0;
   out_1415390971775915258[210] = 0;
   out_1415390971775915258[211] = 0;
   out_1415390971775915258[212] = 0;
   out_1415390971775915258[213] = 0;
   out_1415390971775915258[214] = 0;
   out_1415390971775915258[215] = 0;
   out_1415390971775915258[216] = 0;
   out_1415390971775915258[217] = 0;
   out_1415390971775915258[218] = 0;
   out_1415390971775915258[219] = 1.0;
   out_1415390971775915258[220] = 0;
   out_1415390971775915258[221] = 0;
   out_1415390971775915258[222] = 0;
   out_1415390971775915258[223] = 0;
   out_1415390971775915258[224] = 0;
   out_1415390971775915258[225] = 0;
   out_1415390971775915258[226] = 0;
   out_1415390971775915258[227] = 0;
   out_1415390971775915258[228] = 0;
   out_1415390971775915258[229] = 0;
   out_1415390971775915258[230] = 0;
   out_1415390971775915258[231] = 0;
   out_1415390971775915258[232] = 0;
   out_1415390971775915258[233] = 0;
   out_1415390971775915258[234] = 0;
   out_1415390971775915258[235] = 0;
   out_1415390971775915258[236] = 0;
   out_1415390971775915258[237] = 0;
   out_1415390971775915258[238] = 0;
   out_1415390971775915258[239] = 0;
   out_1415390971775915258[240] = 0;
   out_1415390971775915258[241] = 1.0;
   out_1415390971775915258[242] = 0;
   out_1415390971775915258[243] = 0;
   out_1415390971775915258[244] = 0;
   out_1415390971775915258[245] = 0;
   out_1415390971775915258[246] = 0;
   out_1415390971775915258[247] = 0;
   out_1415390971775915258[248] = 0;
   out_1415390971775915258[249] = 0;
   out_1415390971775915258[250] = 0;
   out_1415390971775915258[251] = 0;
   out_1415390971775915258[252] = 0;
   out_1415390971775915258[253] = 0;
   out_1415390971775915258[254] = 0;
   out_1415390971775915258[255] = 0;
   out_1415390971775915258[256] = 0;
   out_1415390971775915258[257] = 0;
   out_1415390971775915258[258] = 0;
   out_1415390971775915258[259] = 0;
   out_1415390971775915258[260] = 0;
   out_1415390971775915258[261] = 0;
   out_1415390971775915258[262] = 0;
   out_1415390971775915258[263] = 1.0;
   out_1415390971775915258[264] = 0;
   out_1415390971775915258[265] = 0;
   out_1415390971775915258[266] = 0;
   out_1415390971775915258[267] = 0;
   out_1415390971775915258[268] = 0;
   out_1415390971775915258[269] = 0;
   out_1415390971775915258[270] = 0;
   out_1415390971775915258[271] = 0;
   out_1415390971775915258[272] = 0;
   out_1415390971775915258[273] = 0;
   out_1415390971775915258[274] = 0;
   out_1415390971775915258[275] = 0;
   out_1415390971775915258[276] = 0;
   out_1415390971775915258[277] = 0;
   out_1415390971775915258[278] = 0;
   out_1415390971775915258[279] = 0;
   out_1415390971775915258[280] = 0;
   out_1415390971775915258[281] = 0;
   out_1415390971775915258[282] = 0;
   out_1415390971775915258[283] = 0;
   out_1415390971775915258[284] = 0;
   out_1415390971775915258[285] = 1.0;
   out_1415390971775915258[286] = 0;
   out_1415390971775915258[287] = 0;
   out_1415390971775915258[288] = 0;
   out_1415390971775915258[289] = 0;
   out_1415390971775915258[290] = 0;
   out_1415390971775915258[291] = 0;
   out_1415390971775915258[292] = 0;
   out_1415390971775915258[293] = 0;
   out_1415390971775915258[294] = 0;
   out_1415390971775915258[295] = 0;
   out_1415390971775915258[296] = 0;
   out_1415390971775915258[297] = 0;
   out_1415390971775915258[298] = 0;
   out_1415390971775915258[299] = 0;
   out_1415390971775915258[300] = 0;
   out_1415390971775915258[301] = 0;
   out_1415390971775915258[302] = 0;
   out_1415390971775915258[303] = 0;
   out_1415390971775915258[304] = 0;
   out_1415390971775915258[305] = 0;
   out_1415390971775915258[306] = 0;
   out_1415390971775915258[307] = 1.0;
   out_1415390971775915258[308] = 0;
   out_1415390971775915258[309] = 0;
   out_1415390971775915258[310] = 0;
   out_1415390971775915258[311] = 0;
   out_1415390971775915258[312] = 0;
   out_1415390971775915258[313] = 0;
   out_1415390971775915258[314] = 0;
   out_1415390971775915258[315] = 0;
   out_1415390971775915258[316] = 0;
   out_1415390971775915258[317] = 0;
   out_1415390971775915258[318] = 0;
   out_1415390971775915258[319] = 0;
   out_1415390971775915258[320] = 0;
   out_1415390971775915258[321] = 0;
   out_1415390971775915258[322] = 0;
   out_1415390971775915258[323] = 0;
   out_1415390971775915258[324] = 0;
   out_1415390971775915258[325] = 0;
   out_1415390971775915258[326] = 0;
   out_1415390971775915258[327] = 0;
   out_1415390971775915258[328] = 0;
   out_1415390971775915258[329] = 1.0;
   out_1415390971775915258[330] = 0;
   out_1415390971775915258[331] = 0;
   out_1415390971775915258[332] = 0;
   out_1415390971775915258[333] = 0;
   out_1415390971775915258[334] = 0;
   out_1415390971775915258[335] = 0;
   out_1415390971775915258[336] = 0;
   out_1415390971775915258[337] = 0;
   out_1415390971775915258[338] = 0;
   out_1415390971775915258[339] = 0;
   out_1415390971775915258[340] = 0;
   out_1415390971775915258[341] = 0;
   out_1415390971775915258[342] = 0;
   out_1415390971775915258[343] = 0;
   out_1415390971775915258[344] = 0;
   out_1415390971775915258[345] = 0;
   out_1415390971775915258[346] = 0;
   out_1415390971775915258[347] = 0;
   out_1415390971775915258[348] = 0;
   out_1415390971775915258[349] = 0;
   out_1415390971775915258[350] = 0;
   out_1415390971775915258[351] = 1.0;
   out_1415390971775915258[352] = 0;
   out_1415390971775915258[353] = 0;
   out_1415390971775915258[354] = 0;
   out_1415390971775915258[355] = 0;
   out_1415390971775915258[356] = 0;
   out_1415390971775915258[357] = 0;
   out_1415390971775915258[358] = 0;
   out_1415390971775915258[359] = 0;
   out_1415390971775915258[360] = 0;
   out_1415390971775915258[361] = 0;
   out_1415390971775915258[362] = 0;
   out_1415390971775915258[363] = 0;
   out_1415390971775915258[364] = 0;
   out_1415390971775915258[365] = 0;
   out_1415390971775915258[366] = 0;
   out_1415390971775915258[367] = 0;
   out_1415390971775915258[368] = 0;
   out_1415390971775915258[369] = 0;
   out_1415390971775915258[370] = 0;
   out_1415390971775915258[371] = 0;
   out_1415390971775915258[372] = 0;
   out_1415390971775915258[373] = 1.0;
   out_1415390971775915258[374] = 0;
   out_1415390971775915258[375] = 0;
   out_1415390971775915258[376] = 0;
   out_1415390971775915258[377] = 0;
   out_1415390971775915258[378] = 0;
   out_1415390971775915258[379] = 0;
   out_1415390971775915258[380] = 0;
   out_1415390971775915258[381] = 0;
   out_1415390971775915258[382] = 0;
   out_1415390971775915258[383] = 0;
   out_1415390971775915258[384] = 0;
   out_1415390971775915258[385] = 0;
   out_1415390971775915258[386] = 0;
   out_1415390971775915258[387] = 0;
   out_1415390971775915258[388] = 0;
   out_1415390971775915258[389] = 0;
   out_1415390971775915258[390] = 0;
   out_1415390971775915258[391] = 0;
   out_1415390971775915258[392] = 0;
   out_1415390971775915258[393] = 0;
   out_1415390971775915258[394] = 0;
   out_1415390971775915258[395] = 1.0;
   out_1415390971775915258[396] = 0;
   out_1415390971775915258[397] = 0;
   out_1415390971775915258[398] = 0;
   out_1415390971775915258[399] = 0;
   out_1415390971775915258[400] = 0;
   out_1415390971775915258[401] = 0;
   out_1415390971775915258[402] = 0;
   out_1415390971775915258[403] = 0;
   out_1415390971775915258[404] = 0;
   out_1415390971775915258[405] = 0;
   out_1415390971775915258[406] = 0;
   out_1415390971775915258[407] = 0;
   out_1415390971775915258[408] = 0;
   out_1415390971775915258[409] = 0;
   out_1415390971775915258[410] = 0;
   out_1415390971775915258[411] = 0;
   out_1415390971775915258[412] = 0;
   out_1415390971775915258[413] = 0;
   out_1415390971775915258[414] = 0;
   out_1415390971775915258[415] = 0;
   out_1415390971775915258[416] = 0;
   out_1415390971775915258[417] = 1.0;
   out_1415390971775915258[418] = 0;
   out_1415390971775915258[419] = 0;
   out_1415390971775915258[420] = 0;
   out_1415390971775915258[421] = 0;
   out_1415390971775915258[422] = 0;
   out_1415390971775915258[423] = 0;
   out_1415390971775915258[424] = 0;
   out_1415390971775915258[425] = 0;
   out_1415390971775915258[426] = 0;
   out_1415390971775915258[427] = 0;
   out_1415390971775915258[428] = 0;
   out_1415390971775915258[429] = 0;
   out_1415390971775915258[430] = 0;
   out_1415390971775915258[431] = 0;
   out_1415390971775915258[432] = 0;
   out_1415390971775915258[433] = 0;
   out_1415390971775915258[434] = 0;
   out_1415390971775915258[435] = 0;
   out_1415390971775915258[436] = 0;
   out_1415390971775915258[437] = 0;
   out_1415390971775915258[438] = 0;
   out_1415390971775915258[439] = 1.0;
   out_1415390971775915258[440] = 0;
   out_1415390971775915258[441] = 0;
   out_1415390971775915258[442] = 0;
   out_1415390971775915258[443] = 0;
   out_1415390971775915258[444] = 0;
   out_1415390971775915258[445] = 0;
   out_1415390971775915258[446] = 0;
   out_1415390971775915258[447] = 0;
   out_1415390971775915258[448] = 0;
   out_1415390971775915258[449] = 0;
   out_1415390971775915258[450] = 0;
   out_1415390971775915258[451] = 0;
   out_1415390971775915258[452] = 0;
   out_1415390971775915258[453] = 0;
   out_1415390971775915258[454] = 0;
   out_1415390971775915258[455] = 0;
   out_1415390971775915258[456] = 0;
   out_1415390971775915258[457] = 0;
   out_1415390971775915258[458] = 0;
   out_1415390971775915258[459] = 0;
   out_1415390971775915258[460] = 0;
   out_1415390971775915258[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4752873359450517443) {
   out_4752873359450517443[0] = dt*state[7] + state[0];
   out_4752873359450517443[1] = dt*state[8] + state[1];
   out_4752873359450517443[2] = dt*state[9] + state[2];
   out_4752873359450517443[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4752873359450517443[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4752873359450517443[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4752873359450517443[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4752873359450517443[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4752873359450517443[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4752873359450517443[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4752873359450517443[10] = state[10];
   out_4752873359450517443[11] = state[11];
   out_4752873359450517443[12] = state[12];
   out_4752873359450517443[13] = state[13];
   out_4752873359450517443[14] = state[14];
   out_4752873359450517443[15] = state[15];
   out_4752873359450517443[16] = state[16];
   out_4752873359450517443[17] = state[17];
   out_4752873359450517443[18] = state[18];
   out_4752873359450517443[19] = state[19];
   out_4752873359450517443[20] = state[20];
   out_4752873359450517443[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2579228032140110114) {
   out_2579228032140110114[0] = 1;
   out_2579228032140110114[1] = 0;
   out_2579228032140110114[2] = 0;
   out_2579228032140110114[3] = 0;
   out_2579228032140110114[4] = 0;
   out_2579228032140110114[5] = 0;
   out_2579228032140110114[6] = dt;
   out_2579228032140110114[7] = 0;
   out_2579228032140110114[8] = 0;
   out_2579228032140110114[9] = 0;
   out_2579228032140110114[10] = 0;
   out_2579228032140110114[11] = 0;
   out_2579228032140110114[12] = 0;
   out_2579228032140110114[13] = 0;
   out_2579228032140110114[14] = 0;
   out_2579228032140110114[15] = 0;
   out_2579228032140110114[16] = 0;
   out_2579228032140110114[17] = 0;
   out_2579228032140110114[18] = 0;
   out_2579228032140110114[19] = 0;
   out_2579228032140110114[20] = 0;
   out_2579228032140110114[21] = 0;
   out_2579228032140110114[22] = 1;
   out_2579228032140110114[23] = 0;
   out_2579228032140110114[24] = 0;
   out_2579228032140110114[25] = 0;
   out_2579228032140110114[26] = 0;
   out_2579228032140110114[27] = 0;
   out_2579228032140110114[28] = dt;
   out_2579228032140110114[29] = 0;
   out_2579228032140110114[30] = 0;
   out_2579228032140110114[31] = 0;
   out_2579228032140110114[32] = 0;
   out_2579228032140110114[33] = 0;
   out_2579228032140110114[34] = 0;
   out_2579228032140110114[35] = 0;
   out_2579228032140110114[36] = 0;
   out_2579228032140110114[37] = 0;
   out_2579228032140110114[38] = 0;
   out_2579228032140110114[39] = 0;
   out_2579228032140110114[40] = 0;
   out_2579228032140110114[41] = 0;
   out_2579228032140110114[42] = 0;
   out_2579228032140110114[43] = 0;
   out_2579228032140110114[44] = 1;
   out_2579228032140110114[45] = 0;
   out_2579228032140110114[46] = 0;
   out_2579228032140110114[47] = 0;
   out_2579228032140110114[48] = 0;
   out_2579228032140110114[49] = 0;
   out_2579228032140110114[50] = dt;
   out_2579228032140110114[51] = 0;
   out_2579228032140110114[52] = 0;
   out_2579228032140110114[53] = 0;
   out_2579228032140110114[54] = 0;
   out_2579228032140110114[55] = 0;
   out_2579228032140110114[56] = 0;
   out_2579228032140110114[57] = 0;
   out_2579228032140110114[58] = 0;
   out_2579228032140110114[59] = 0;
   out_2579228032140110114[60] = 0;
   out_2579228032140110114[61] = 0;
   out_2579228032140110114[62] = 0;
   out_2579228032140110114[63] = 0;
   out_2579228032140110114[64] = 0;
   out_2579228032140110114[65] = 0;
   out_2579228032140110114[66] = 1;
   out_2579228032140110114[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2579228032140110114[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2579228032140110114[69] = 0;
   out_2579228032140110114[70] = 0;
   out_2579228032140110114[71] = 0;
   out_2579228032140110114[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2579228032140110114[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2579228032140110114[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2579228032140110114[75] = 0;
   out_2579228032140110114[76] = 0;
   out_2579228032140110114[77] = 0;
   out_2579228032140110114[78] = 0;
   out_2579228032140110114[79] = 0;
   out_2579228032140110114[80] = 0;
   out_2579228032140110114[81] = 0;
   out_2579228032140110114[82] = 0;
   out_2579228032140110114[83] = 0;
   out_2579228032140110114[84] = 0;
   out_2579228032140110114[85] = 0;
   out_2579228032140110114[86] = 0;
   out_2579228032140110114[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2579228032140110114[88] = 1;
   out_2579228032140110114[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2579228032140110114[90] = 0;
   out_2579228032140110114[91] = 0;
   out_2579228032140110114[92] = 0;
   out_2579228032140110114[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2579228032140110114[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2579228032140110114[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2579228032140110114[96] = 0;
   out_2579228032140110114[97] = 0;
   out_2579228032140110114[98] = 0;
   out_2579228032140110114[99] = 0;
   out_2579228032140110114[100] = 0;
   out_2579228032140110114[101] = 0;
   out_2579228032140110114[102] = 0;
   out_2579228032140110114[103] = 0;
   out_2579228032140110114[104] = 0;
   out_2579228032140110114[105] = 0;
   out_2579228032140110114[106] = 0;
   out_2579228032140110114[107] = 0;
   out_2579228032140110114[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2579228032140110114[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2579228032140110114[110] = 1;
   out_2579228032140110114[111] = 0;
   out_2579228032140110114[112] = 0;
   out_2579228032140110114[113] = 0;
   out_2579228032140110114[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2579228032140110114[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2579228032140110114[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2579228032140110114[117] = 0;
   out_2579228032140110114[118] = 0;
   out_2579228032140110114[119] = 0;
   out_2579228032140110114[120] = 0;
   out_2579228032140110114[121] = 0;
   out_2579228032140110114[122] = 0;
   out_2579228032140110114[123] = 0;
   out_2579228032140110114[124] = 0;
   out_2579228032140110114[125] = 0;
   out_2579228032140110114[126] = 0;
   out_2579228032140110114[127] = 0;
   out_2579228032140110114[128] = 0;
   out_2579228032140110114[129] = 0;
   out_2579228032140110114[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2579228032140110114[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2579228032140110114[132] = 1;
   out_2579228032140110114[133] = 0;
   out_2579228032140110114[134] = 0;
   out_2579228032140110114[135] = 0;
   out_2579228032140110114[136] = 0;
   out_2579228032140110114[137] = 0;
   out_2579228032140110114[138] = 0;
   out_2579228032140110114[139] = 0;
   out_2579228032140110114[140] = 0;
   out_2579228032140110114[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2579228032140110114[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2579228032140110114[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2579228032140110114[144] = 0;
   out_2579228032140110114[145] = 0;
   out_2579228032140110114[146] = 0;
   out_2579228032140110114[147] = 0;
   out_2579228032140110114[148] = 0;
   out_2579228032140110114[149] = 0;
   out_2579228032140110114[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2579228032140110114[151] = 0;
   out_2579228032140110114[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2579228032140110114[153] = 0;
   out_2579228032140110114[154] = 1;
   out_2579228032140110114[155] = 0;
   out_2579228032140110114[156] = 0;
   out_2579228032140110114[157] = 0;
   out_2579228032140110114[158] = 0;
   out_2579228032140110114[159] = 0;
   out_2579228032140110114[160] = 0;
   out_2579228032140110114[161] = 0;
   out_2579228032140110114[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2579228032140110114[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2579228032140110114[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2579228032140110114[165] = 0;
   out_2579228032140110114[166] = 0;
   out_2579228032140110114[167] = 0;
   out_2579228032140110114[168] = 0;
   out_2579228032140110114[169] = 0;
   out_2579228032140110114[170] = 0;
   out_2579228032140110114[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2579228032140110114[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2579228032140110114[173] = 0;
   out_2579228032140110114[174] = 0;
   out_2579228032140110114[175] = 0;
   out_2579228032140110114[176] = 1;
   out_2579228032140110114[177] = 0;
   out_2579228032140110114[178] = 0;
   out_2579228032140110114[179] = 0;
   out_2579228032140110114[180] = 0;
   out_2579228032140110114[181] = 0;
   out_2579228032140110114[182] = 0;
   out_2579228032140110114[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2579228032140110114[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2579228032140110114[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2579228032140110114[186] = 0;
   out_2579228032140110114[187] = 0;
   out_2579228032140110114[188] = 0;
   out_2579228032140110114[189] = 0;
   out_2579228032140110114[190] = 0;
   out_2579228032140110114[191] = 0;
   out_2579228032140110114[192] = 0;
   out_2579228032140110114[193] = 0;
   out_2579228032140110114[194] = 0;
   out_2579228032140110114[195] = 0;
   out_2579228032140110114[196] = 0;
   out_2579228032140110114[197] = 0;
   out_2579228032140110114[198] = 1;
   out_2579228032140110114[199] = 0;
   out_2579228032140110114[200] = 0;
   out_2579228032140110114[201] = 0;
   out_2579228032140110114[202] = 0;
   out_2579228032140110114[203] = 0;
   out_2579228032140110114[204] = 0;
   out_2579228032140110114[205] = 0;
   out_2579228032140110114[206] = 0;
   out_2579228032140110114[207] = 0;
   out_2579228032140110114[208] = 0;
   out_2579228032140110114[209] = 0;
   out_2579228032140110114[210] = 0;
   out_2579228032140110114[211] = 0;
   out_2579228032140110114[212] = 0;
   out_2579228032140110114[213] = 0;
   out_2579228032140110114[214] = 0;
   out_2579228032140110114[215] = 0;
   out_2579228032140110114[216] = 0;
   out_2579228032140110114[217] = 0;
   out_2579228032140110114[218] = 0;
   out_2579228032140110114[219] = 0;
   out_2579228032140110114[220] = 1;
   out_2579228032140110114[221] = 0;
   out_2579228032140110114[222] = 0;
   out_2579228032140110114[223] = 0;
   out_2579228032140110114[224] = 0;
   out_2579228032140110114[225] = 0;
   out_2579228032140110114[226] = 0;
   out_2579228032140110114[227] = 0;
   out_2579228032140110114[228] = 0;
   out_2579228032140110114[229] = 0;
   out_2579228032140110114[230] = 0;
   out_2579228032140110114[231] = 0;
   out_2579228032140110114[232] = 0;
   out_2579228032140110114[233] = 0;
   out_2579228032140110114[234] = 0;
   out_2579228032140110114[235] = 0;
   out_2579228032140110114[236] = 0;
   out_2579228032140110114[237] = 0;
   out_2579228032140110114[238] = 0;
   out_2579228032140110114[239] = 0;
   out_2579228032140110114[240] = 0;
   out_2579228032140110114[241] = 0;
   out_2579228032140110114[242] = 1;
   out_2579228032140110114[243] = 0;
   out_2579228032140110114[244] = 0;
   out_2579228032140110114[245] = 0;
   out_2579228032140110114[246] = 0;
   out_2579228032140110114[247] = 0;
   out_2579228032140110114[248] = 0;
   out_2579228032140110114[249] = 0;
   out_2579228032140110114[250] = 0;
   out_2579228032140110114[251] = 0;
   out_2579228032140110114[252] = 0;
   out_2579228032140110114[253] = 0;
   out_2579228032140110114[254] = 0;
   out_2579228032140110114[255] = 0;
   out_2579228032140110114[256] = 0;
   out_2579228032140110114[257] = 0;
   out_2579228032140110114[258] = 0;
   out_2579228032140110114[259] = 0;
   out_2579228032140110114[260] = 0;
   out_2579228032140110114[261] = 0;
   out_2579228032140110114[262] = 0;
   out_2579228032140110114[263] = 0;
   out_2579228032140110114[264] = 1;
   out_2579228032140110114[265] = 0;
   out_2579228032140110114[266] = 0;
   out_2579228032140110114[267] = 0;
   out_2579228032140110114[268] = 0;
   out_2579228032140110114[269] = 0;
   out_2579228032140110114[270] = 0;
   out_2579228032140110114[271] = 0;
   out_2579228032140110114[272] = 0;
   out_2579228032140110114[273] = 0;
   out_2579228032140110114[274] = 0;
   out_2579228032140110114[275] = 0;
   out_2579228032140110114[276] = 0;
   out_2579228032140110114[277] = 0;
   out_2579228032140110114[278] = 0;
   out_2579228032140110114[279] = 0;
   out_2579228032140110114[280] = 0;
   out_2579228032140110114[281] = 0;
   out_2579228032140110114[282] = 0;
   out_2579228032140110114[283] = 0;
   out_2579228032140110114[284] = 0;
   out_2579228032140110114[285] = 0;
   out_2579228032140110114[286] = 1;
   out_2579228032140110114[287] = 0;
   out_2579228032140110114[288] = 0;
   out_2579228032140110114[289] = 0;
   out_2579228032140110114[290] = 0;
   out_2579228032140110114[291] = 0;
   out_2579228032140110114[292] = 0;
   out_2579228032140110114[293] = 0;
   out_2579228032140110114[294] = 0;
   out_2579228032140110114[295] = 0;
   out_2579228032140110114[296] = 0;
   out_2579228032140110114[297] = 0;
   out_2579228032140110114[298] = 0;
   out_2579228032140110114[299] = 0;
   out_2579228032140110114[300] = 0;
   out_2579228032140110114[301] = 0;
   out_2579228032140110114[302] = 0;
   out_2579228032140110114[303] = 0;
   out_2579228032140110114[304] = 0;
   out_2579228032140110114[305] = 0;
   out_2579228032140110114[306] = 0;
   out_2579228032140110114[307] = 0;
   out_2579228032140110114[308] = 1;
   out_2579228032140110114[309] = 0;
   out_2579228032140110114[310] = 0;
   out_2579228032140110114[311] = 0;
   out_2579228032140110114[312] = 0;
   out_2579228032140110114[313] = 0;
   out_2579228032140110114[314] = 0;
   out_2579228032140110114[315] = 0;
   out_2579228032140110114[316] = 0;
   out_2579228032140110114[317] = 0;
   out_2579228032140110114[318] = 0;
   out_2579228032140110114[319] = 0;
   out_2579228032140110114[320] = 0;
   out_2579228032140110114[321] = 0;
   out_2579228032140110114[322] = 0;
   out_2579228032140110114[323] = 0;
   out_2579228032140110114[324] = 0;
   out_2579228032140110114[325] = 0;
   out_2579228032140110114[326] = 0;
   out_2579228032140110114[327] = 0;
   out_2579228032140110114[328] = 0;
   out_2579228032140110114[329] = 0;
   out_2579228032140110114[330] = 1;
   out_2579228032140110114[331] = 0;
   out_2579228032140110114[332] = 0;
   out_2579228032140110114[333] = 0;
   out_2579228032140110114[334] = 0;
   out_2579228032140110114[335] = 0;
   out_2579228032140110114[336] = 0;
   out_2579228032140110114[337] = 0;
   out_2579228032140110114[338] = 0;
   out_2579228032140110114[339] = 0;
   out_2579228032140110114[340] = 0;
   out_2579228032140110114[341] = 0;
   out_2579228032140110114[342] = 0;
   out_2579228032140110114[343] = 0;
   out_2579228032140110114[344] = 0;
   out_2579228032140110114[345] = 0;
   out_2579228032140110114[346] = 0;
   out_2579228032140110114[347] = 0;
   out_2579228032140110114[348] = 0;
   out_2579228032140110114[349] = 0;
   out_2579228032140110114[350] = 0;
   out_2579228032140110114[351] = 0;
   out_2579228032140110114[352] = 1;
   out_2579228032140110114[353] = 0;
   out_2579228032140110114[354] = 0;
   out_2579228032140110114[355] = 0;
   out_2579228032140110114[356] = 0;
   out_2579228032140110114[357] = 0;
   out_2579228032140110114[358] = 0;
   out_2579228032140110114[359] = 0;
   out_2579228032140110114[360] = 0;
   out_2579228032140110114[361] = 0;
   out_2579228032140110114[362] = 0;
   out_2579228032140110114[363] = 0;
   out_2579228032140110114[364] = 0;
   out_2579228032140110114[365] = 0;
   out_2579228032140110114[366] = 0;
   out_2579228032140110114[367] = 0;
   out_2579228032140110114[368] = 0;
   out_2579228032140110114[369] = 0;
   out_2579228032140110114[370] = 0;
   out_2579228032140110114[371] = 0;
   out_2579228032140110114[372] = 0;
   out_2579228032140110114[373] = 0;
   out_2579228032140110114[374] = 1;
   out_2579228032140110114[375] = 0;
   out_2579228032140110114[376] = 0;
   out_2579228032140110114[377] = 0;
   out_2579228032140110114[378] = 0;
   out_2579228032140110114[379] = 0;
   out_2579228032140110114[380] = 0;
   out_2579228032140110114[381] = 0;
   out_2579228032140110114[382] = 0;
   out_2579228032140110114[383] = 0;
   out_2579228032140110114[384] = 0;
   out_2579228032140110114[385] = 0;
   out_2579228032140110114[386] = 0;
   out_2579228032140110114[387] = 0;
   out_2579228032140110114[388] = 0;
   out_2579228032140110114[389] = 0;
   out_2579228032140110114[390] = 0;
   out_2579228032140110114[391] = 0;
   out_2579228032140110114[392] = 0;
   out_2579228032140110114[393] = 0;
   out_2579228032140110114[394] = 0;
   out_2579228032140110114[395] = 0;
   out_2579228032140110114[396] = 1;
   out_2579228032140110114[397] = 0;
   out_2579228032140110114[398] = 0;
   out_2579228032140110114[399] = 0;
   out_2579228032140110114[400] = 0;
   out_2579228032140110114[401] = 0;
   out_2579228032140110114[402] = 0;
   out_2579228032140110114[403] = 0;
   out_2579228032140110114[404] = 0;
   out_2579228032140110114[405] = 0;
   out_2579228032140110114[406] = 0;
   out_2579228032140110114[407] = 0;
   out_2579228032140110114[408] = 0;
   out_2579228032140110114[409] = 0;
   out_2579228032140110114[410] = 0;
   out_2579228032140110114[411] = 0;
   out_2579228032140110114[412] = 0;
   out_2579228032140110114[413] = 0;
   out_2579228032140110114[414] = 0;
   out_2579228032140110114[415] = 0;
   out_2579228032140110114[416] = 0;
   out_2579228032140110114[417] = 0;
   out_2579228032140110114[418] = 1;
   out_2579228032140110114[419] = 0;
   out_2579228032140110114[420] = 0;
   out_2579228032140110114[421] = 0;
   out_2579228032140110114[422] = 0;
   out_2579228032140110114[423] = 0;
   out_2579228032140110114[424] = 0;
   out_2579228032140110114[425] = 0;
   out_2579228032140110114[426] = 0;
   out_2579228032140110114[427] = 0;
   out_2579228032140110114[428] = 0;
   out_2579228032140110114[429] = 0;
   out_2579228032140110114[430] = 0;
   out_2579228032140110114[431] = 0;
   out_2579228032140110114[432] = 0;
   out_2579228032140110114[433] = 0;
   out_2579228032140110114[434] = 0;
   out_2579228032140110114[435] = 0;
   out_2579228032140110114[436] = 0;
   out_2579228032140110114[437] = 0;
   out_2579228032140110114[438] = 0;
   out_2579228032140110114[439] = 0;
   out_2579228032140110114[440] = 1;
}
void h_4(double *state, double *unused, double *out_2936653668917254183) {
   out_2936653668917254183[0] = state[10] + state[13];
   out_2936653668917254183[1] = state[11] + state[14];
   out_2936653668917254183[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5235003673643920434) {
   out_5235003673643920434[0] = 0;
   out_5235003673643920434[1] = 0;
   out_5235003673643920434[2] = 0;
   out_5235003673643920434[3] = 0;
   out_5235003673643920434[4] = 0;
   out_5235003673643920434[5] = 0;
   out_5235003673643920434[6] = 0;
   out_5235003673643920434[7] = 0;
   out_5235003673643920434[8] = 0;
   out_5235003673643920434[9] = 0;
   out_5235003673643920434[10] = 1;
   out_5235003673643920434[11] = 0;
   out_5235003673643920434[12] = 0;
   out_5235003673643920434[13] = 1;
   out_5235003673643920434[14] = 0;
   out_5235003673643920434[15] = 0;
   out_5235003673643920434[16] = 0;
   out_5235003673643920434[17] = 0;
   out_5235003673643920434[18] = 0;
   out_5235003673643920434[19] = 0;
   out_5235003673643920434[20] = 0;
   out_5235003673643920434[21] = 0;
   out_5235003673643920434[22] = 0;
   out_5235003673643920434[23] = 0;
   out_5235003673643920434[24] = 0;
   out_5235003673643920434[25] = 0;
   out_5235003673643920434[26] = 0;
   out_5235003673643920434[27] = 0;
   out_5235003673643920434[28] = 0;
   out_5235003673643920434[29] = 0;
   out_5235003673643920434[30] = 0;
   out_5235003673643920434[31] = 0;
   out_5235003673643920434[32] = 0;
   out_5235003673643920434[33] = 1;
   out_5235003673643920434[34] = 0;
   out_5235003673643920434[35] = 0;
   out_5235003673643920434[36] = 1;
   out_5235003673643920434[37] = 0;
   out_5235003673643920434[38] = 0;
   out_5235003673643920434[39] = 0;
   out_5235003673643920434[40] = 0;
   out_5235003673643920434[41] = 0;
   out_5235003673643920434[42] = 0;
   out_5235003673643920434[43] = 0;
   out_5235003673643920434[44] = 0;
   out_5235003673643920434[45] = 0;
   out_5235003673643920434[46] = 0;
   out_5235003673643920434[47] = 0;
   out_5235003673643920434[48] = 0;
   out_5235003673643920434[49] = 0;
   out_5235003673643920434[50] = 0;
   out_5235003673643920434[51] = 0;
   out_5235003673643920434[52] = 0;
   out_5235003673643920434[53] = 0;
   out_5235003673643920434[54] = 0;
   out_5235003673643920434[55] = 0;
   out_5235003673643920434[56] = 1;
   out_5235003673643920434[57] = 0;
   out_5235003673643920434[58] = 0;
   out_5235003673643920434[59] = 1;
   out_5235003673643920434[60] = 0;
   out_5235003673643920434[61] = 0;
   out_5235003673643920434[62] = 0;
   out_5235003673643920434[63] = 0;
   out_5235003673643920434[64] = 0;
   out_5235003673643920434[65] = 0;
}
void h_9(double *state, double *unused, double *out_7728031144715738627) {
   out_7728031144715738627[0] = state[10];
   out_7728031144715738627[1] = state[11];
   out_7728031144715738627[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5476193320273511079) {
   out_5476193320273511079[0] = 0;
   out_5476193320273511079[1] = 0;
   out_5476193320273511079[2] = 0;
   out_5476193320273511079[3] = 0;
   out_5476193320273511079[4] = 0;
   out_5476193320273511079[5] = 0;
   out_5476193320273511079[6] = 0;
   out_5476193320273511079[7] = 0;
   out_5476193320273511079[8] = 0;
   out_5476193320273511079[9] = 0;
   out_5476193320273511079[10] = 1;
   out_5476193320273511079[11] = 0;
   out_5476193320273511079[12] = 0;
   out_5476193320273511079[13] = 0;
   out_5476193320273511079[14] = 0;
   out_5476193320273511079[15] = 0;
   out_5476193320273511079[16] = 0;
   out_5476193320273511079[17] = 0;
   out_5476193320273511079[18] = 0;
   out_5476193320273511079[19] = 0;
   out_5476193320273511079[20] = 0;
   out_5476193320273511079[21] = 0;
   out_5476193320273511079[22] = 0;
   out_5476193320273511079[23] = 0;
   out_5476193320273511079[24] = 0;
   out_5476193320273511079[25] = 0;
   out_5476193320273511079[26] = 0;
   out_5476193320273511079[27] = 0;
   out_5476193320273511079[28] = 0;
   out_5476193320273511079[29] = 0;
   out_5476193320273511079[30] = 0;
   out_5476193320273511079[31] = 0;
   out_5476193320273511079[32] = 0;
   out_5476193320273511079[33] = 1;
   out_5476193320273511079[34] = 0;
   out_5476193320273511079[35] = 0;
   out_5476193320273511079[36] = 0;
   out_5476193320273511079[37] = 0;
   out_5476193320273511079[38] = 0;
   out_5476193320273511079[39] = 0;
   out_5476193320273511079[40] = 0;
   out_5476193320273511079[41] = 0;
   out_5476193320273511079[42] = 0;
   out_5476193320273511079[43] = 0;
   out_5476193320273511079[44] = 0;
   out_5476193320273511079[45] = 0;
   out_5476193320273511079[46] = 0;
   out_5476193320273511079[47] = 0;
   out_5476193320273511079[48] = 0;
   out_5476193320273511079[49] = 0;
   out_5476193320273511079[50] = 0;
   out_5476193320273511079[51] = 0;
   out_5476193320273511079[52] = 0;
   out_5476193320273511079[53] = 0;
   out_5476193320273511079[54] = 0;
   out_5476193320273511079[55] = 0;
   out_5476193320273511079[56] = 1;
   out_5476193320273511079[57] = 0;
   out_5476193320273511079[58] = 0;
   out_5476193320273511079[59] = 0;
   out_5476193320273511079[60] = 0;
   out_5476193320273511079[61] = 0;
   out_5476193320273511079[62] = 0;
   out_5476193320273511079[63] = 0;
   out_5476193320273511079[64] = 0;
   out_5476193320273511079[65] = 0;
}
void h_10(double *state, double *unused, double *out_3605403209797755241) {
   out_3605403209797755241[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3605403209797755241[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3605403209797755241[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6549190697710806901) {
   out_6549190697710806901[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6549190697710806901[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6549190697710806901[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6549190697710806901[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6549190697710806901[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6549190697710806901[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6549190697710806901[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6549190697710806901[7] = 0;
   out_6549190697710806901[8] = 0;
   out_6549190697710806901[9] = 0;
   out_6549190697710806901[10] = 0;
   out_6549190697710806901[11] = 0;
   out_6549190697710806901[12] = 0;
   out_6549190697710806901[13] = 0;
   out_6549190697710806901[14] = 0;
   out_6549190697710806901[15] = 0;
   out_6549190697710806901[16] = 1;
   out_6549190697710806901[17] = 0;
   out_6549190697710806901[18] = 0;
   out_6549190697710806901[19] = 1;
   out_6549190697710806901[20] = 0;
   out_6549190697710806901[21] = 0;
   out_6549190697710806901[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6549190697710806901[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6549190697710806901[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6549190697710806901[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6549190697710806901[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6549190697710806901[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6549190697710806901[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6549190697710806901[29] = 0;
   out_6549190697710806901[30] = 0;
   out_6549190697710806901[31] = 0;
   out_6549190697710806901[32] = 0;
   out_6549190697710806901[33] = 0;
   out_6549190697710806901[34] = 0;
   out_6549190697710806901[35] = 0;
   out_6549190697710806901[36] = 0;
   out_6549190697710806901[37] = 0;
   out_6549190697710806901[38] = 0;
   out_6549190697710806901[39] = 1;
   out_6549190697710806901[40] = 0;
   out_6549190697710806901[41] = 0;
   out_6549190697710806901[42] = 1;
   out_6549190697710806901[43] = 0;
   out_6549190697710806901[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6549190697710806901[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6549190697710806901[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6549190697710806901[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6549190697710806901[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6549190697710806901[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6549190697710806901[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6549190697710806901[51] = 0;
   out_6549190697710806901[52] = 0;
   out_6549190697710806901[53] = 0;
   out_6549190697710806901[54] = 0;
   out_6549190697710806901[55] = 0;
   out_6549190697710806901[56] = 0;
   out_6549190697710806901[57] = 0;
   out_6549190697710806901[58] = 0;
   out_6549190697710806901[59] = 0;
   out_6549190697710806901[60] = 0;
   out_6549190697710806901[61] = 0;
   out_6549190697710806901[62] = 1;
   out_6549190697710806901[63] = 0;
   out_6549190697710806901[64] = 0;
   out_6549190697710806901[65] = 1;
}
void h_12(double *state, double *unused, double *out_2198153258387525618) {
   out_2198153258387525618[0] = state[0];
   out_2198153258387525618[1] = state[1];
   out_2198153258387525618[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8192283992033669387) {
   out_8192283992033669387[0] = 1;
   out_8192283992033669387[1] = 0;
   out_8192283992033669387[2] = 0;
   out_8192283992033669387[3] = 0;
   out_8192283992033669387[4] = 0;
   out_8192283992033669387[5] = 0;
   out_8192283992033669387[6] = 0;
   out_8192283992033669387[7] = 0;
   out_8192283992033669387[8] = 0;
   out_8192283992033669387[9] = 0;
   out_8192283992033669387[10] = 0;
   out_8192283992033669387[11] = 0;
   out_8192283992033669387[12] = 0;
   out_8192283992033669387[13] = 0;
   out_8192283992033669387[14] = 0;
   out_8192283992033669387[15] = 0;
   out_8192283992033669387[16] = 0;
   out_8192283992033669387[17] = 0;
   out_8192283992033669387[18] = 0;
   out_8192283992033669387[19] = 0;
   out_8192283992033669387[20] = 0;
   out_8192283992033669387[21] = 0;
   out_8192283992033669387[22] = 0;
   out_8192283992033669387[23] = 1;
   out_8192283992033669387[24] = 0;
   out_8192283992033669387[25] = 0;
   out_8192283992033669387[26] = 0;
   out_8192283992033669387[27] = 0;
   out_8192283992033669387[28] = 0;
   out_8192283992033669387[29] = 0;
   out_8192283992033669387[30] = 0;
   out_8192283992033669387[31] = 0;
   out_8192283992033669387[32] = 0;
   out_8192283992033669387[33] = 0;
   out_8192283992033669387[34] = 0;
   out_8192283992033669387[35] = 0;
   out_8192283992033669387[36] = 0;
   out_8192283992033669387[37] = 0;
   out_8192283992033669387[38] = 0;
   out_8192283992033669387[39] = 0;
   out_8192283992033669387[40] = 0;
   out_8192283992033669387[41] = 0;
   out_8192283992033669387[42] = 0;
   out_8192283992033669387[43] = 0;
   out_8192283992033669387[44] = 0;
   out_8192283992033669387[45] = 0;
   out_8192283992033669387[46] = 1;
   out_8192283992033669387[47] = 0;
   out_8192283992033669387[48] = 0;
   out_8192283992033669387[49] = 0;
   out_8192283992033669387[50] = 0;
   out_8192283992033669387[51] = 0;
   out_8192283992033669387[52] = 0;
   out_8192283992033669387[53] = 0;
   out_8192283992033669387[54] = 0;
   out_8192283992033669387[55] = 0;
   out_8192283992033669387[56] = 0;
   out_8192283992033669387[57] = 0;
   out_8192283992033669387[58] = 0;
   out_8192283992033669387[59] = 0;
   out_8192283992033669387[60] = 0;
   out_8192283992033669387[61] = 0;
   out_8192283992033669387[62] = 0;
   out_8192283992033669387[63] = 0;
   out_8192283992033669387[64] = 0;
   out_8192283992033669387[65] = 0;
}
void h_35(double *state, double *unused, double *out_6692132050259859426) {
   out_6692132050259859426[0] = state[7];
   out_6692132050259859426[1] = state[8];
   out_6692132050259859426[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8601665731016527810) {
   out_8601665731016527810[0] = 0;
   out_8601665731016527810[1] = 0;
   out_8601665731016527810[2] = 0;
   out_8601665731016527810[3] = 0;
   out_8601665731016527810[4] = 0;
   out_8601665731016527810[5] = 0;
   out_8601665731016527810[6] = 0;
   out_8601665731016527810[7] = 1;
   out_8601665731016527810[8] = 0;
   out_8601665731016527810[9] = 0;
   out_8601665731016527810[10] = 0;
   out_8601665731016527810[11] = 0;
   out_8601665731016527810[12] = 0;
   out_8601665731016527810[13] = 0;
   out_8601665731016527810[14] = 0;
   out_8601665731016527810[15] = 0;
   out_8601665731016527810[16] = 0;
   out_8601665731016527810[17] = 0;
   out_8601665731016527810[18] = 0;
   out_8601665731016527810[19] = 0;
   out_8601665731016527810[20] = 0;
   out_8601665731016527810[21] = 0;
   out_8601665731016527810[22] = 0;
   out_8601665731016527810[23] = 0;
   out_8601665731016527810[24] = 0;
   out_8601665731016527810[25] = 0;
   out_8601665731016527810[26] = 0;
   out_8601665731016527810[27] = 0;
   out_8601665731016527810[28] = 0;
   out_8601665731016527810[29] = 0;
   out_8601665731016527810[30] = 1;
   out_8601665731016527810[31] = 0;
   out_8601665731016527810[32] = 0;
   out_8601665731016527810[33] = 0;
   out_8601665731016527810[34] = 0;
   out_8601665731016527810[35] = 0;
   out_8601665731016527810[36] = 0;
   out_8601665731016527810[37] = 0;
   out_8601665731016527810[38] = 0;
   out_8601665731016527810[39] = 0;
   out_8601665731016527810[40] = 0;
   out_8601665731016527810[41] = 0;
   out_8601665731016527810[42] = 0;
   out_8601665731016527810[43] = 0;
   out_8601665731016527810[44] = 0;
   out_8601665731016527810[45] = 0;
   out_8601665731016527810[46] = 0;
   out_8601665731016527810[47] = 0;
   out_8601665731016527810[48] = 0;
   out_8601665731016527810[49] = 0;
   out_8601665731016527810[50] = 0;
   out_8601665731016527810[51] = 0;
   out_8601665731016527810[52] = 0;
   out_8601665731016527810[53] = 1;
   out_8601665731016527810[54] = 0;
   out_8601665731016527810[55] = 0;
   out_8601665731016527810[56] = 0;
   out_8601665731016527810[57] = 0;
   out_8601665731016527810[58] = 0;
   out_8601665731016527810[59] = 0;
   out_8601665731016527810[60] = 0;
   out_8601665731016527810[61] = 0;
   out_8601665731016527810[62] = 0;
   out_8601665731016527810[63] = 0;
   out_8601665731016527810[64] = 0;
   out_8601665731016527810[65] = 0;
}
void h_32(double *state, double *unused, double *out_644450187701719295) {
   out_644450187701719295[0] = state[3];
   out_644450187701719295[1] = state[4];
   out_644450187701719295[2] = state[5];
   out_644450187701719295[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1686801227322411454) {
   out_1686801227322411454[0] = 0;
   out_1686801227322411454[1] = 0;
   out_1686801227322411454[2] = 0;
   out_1686801227322411454[3] = 1;
   out_1686801227322411454[4] = 0;
   out_1686801227322411454[5] = 0;
   out_1686801227322411454[6] = 0;
   out_1686801227322411454[7] = 0;
   out_1686801227322411454[8] = 0;
   out_1686801227322411454[9] = 0;
   out_1686801227322411454[10] = 0;
   out_1686801227322411454[11] = 0;
   out_1686801227322411454[12] = 0;
   out_1686801227322411454[13] = 0;
   out_1686801227322411454[14] = 0;
   out_1686801227322411454[15] = 0;
   out_1686801227322411454[16] = 0;
   out_1686801227322411454[17] = 0;
   out_1686801227322411454[18] = 0;
   out_1686801227322411454[19] = 0;
   out_1686801227322411454[20] = 0;
   out_1686801227322411454[21] = 0;
   out_1686801227322411454[22] = 0;
   out_1686801227322411454[23] = 0;
   out_1686801227322411454[24] = 0;
   out_1686801227322411454[25] = 0;
   out_1686801227322411454[26] = 1;
   out_1686801227322411454[27] = 0;
   out_1686801227322411454[28] = 0;
   out_1686801227322411454[29] = 0;
   out_1686801227322411454[30] = 0;
   out_1686801227322411454[31] = 0;
   out_1686801227322411454[32] = 0;
   out_1686801227322411454[33] = 0;
   out_1686801227322411454[34] = 0;
   out_1686801227322411454[35] = 0;
   out_1686801227322411454[36] = 0;
   out_1686801227322411454[37] = 0;
   out_1686801227322411454[38] = 0;
   out_1686801227322411454[39] = 0;
   out_1686801227322411454[40] = 0;
   out_1686801227322411454[41] = 0;
   out_1686801227322411454[42] = 0;
   out_1686801227322411454[43] = 0;
   out_1686801227322411454[44] = 0;
   out_1686801227322411454[45] = 0;
   out_1686801227322411454[46] = 0;
   out_1686801227322411454[47] = 0;
   out_1686801227322411454[48] = 0;
   out_1686801227322411454[49] = 1;
   out_1686801227322411454[50] = 0;
   out_1686801227322411454[51] = 0;
   out_1686801227322411454[52] = 0;
   out_1686801227322411454[53] = 0;
   out_1686801227322411454[54] = 0;
   out_1686801227322411454[55] = 0;
   out_1686801227322411454[56] = 0;
   out_1686801227322411454[57] = 0;
   out_1686801227322411454[58] = 0;
   out_1686801227322411454[59] = 0;
   out_1686801227322411454[60] = 0;
   out_1686801227322411454[61] = 0;
   out_1686801227322411454[62] = 0;
   out_1686801227322411454[63] = 0;
   out_1686801227322411454[64] = 0;
   out_1686801227322411454[65] = 0;
   out_1686801227322411454[66] = 0;
   out_1686801227322411454[67] = 0;
   out_1686801227322411454[68] = 0;
   out_1686801227322411454[69] = 0;
   out_1686801227322411454[70] = 0;
   out_1686801227322411454[71] = 0;
   out_1686801227322411454[72] = 1;
   out_1686801227322411454[73] = 0;
   out_1686801227322411454[74] = 0;
   out_1686801227322411454[75] = 0;
   out_1686801227322411454[76] = 0;
   out_1686801227322411454[77] = 0;
   out_1686801227322411454[78] = 0;
   out_1686801227322411454[79] = 0;
   out_1686801227322411454[80] = 0;
   out_1686801227322411454[81] = 0;
   out_1686801227322411454[82] = 0;
   out_1686801227322411454[83] = 0;
   out_1686801227322411454[84] = 0;
   out_1686801227322411454[85] = 0;
   out_1686801227322411454[86] = 0;
   out_1686801227322411454[87] = 0;
}
void h_13(double *state, double *unused, double *out_1048110653605419057) {
   out_1048110653605419057[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1048110653605419057[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1048110653605419057[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_774523308631420790) {
   out_774523308631420790[0] = 0;
   out_774523308631420790[1] = 0;
   out_774523308631420790[2] = 0;
   out_774523308631420790[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_774523308631420790[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_774523308631420790[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_774523308631420790[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_774523308631420790[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_774523308631420790[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_774523308631420790[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_774523308631420790[10] = 0;
   out_774523308631420790[11] = 0;
   out_774523308631420790[12] = 0;
   out_774523308631420790[13] = 0;
   out_774523308631420790[14] = 0;
   out_774523308631420790[15] = 0;
   out_774523308631420790[16] = 0;
   out_774523308631420790[17] = 0;
   out_774523308631420790[18] = 0;
   out_774523308631420790[19] = 0;
   out_774523308631420790[20] = 0;
   out_774523308631420790[21] = 0;
   out_774523308631420790[22] = 0;
   out_774523308631420790[23] = 0;
   out_774523308631420790[24] = 0;
   out_774523308631420790[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_774523308631420790[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_774523308631420790[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_774523308631420790[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_774523308631420790[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_774523308631420790[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_774523308631420790[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_774523308631420790[32] = 0;
   out_774523308631420790[33] = 0;
   out_774523308631420790[34] = 0;
   out_774523308631420790[35] = 0;
   out_774523308631420790[36] = 0;
   out_774523308631420790[37] = 0;
   out_774523308631420790[38] = 0;
   out_774523308631420790[39] = 0;
   out_774523308631420790[40] = 0;
   out_774523308631420790[41] = 0;
   out_774523308631420790[42] = 0;
   out_774523308631420790[43] = 0;
   out_774523308631420790[44] = 0;
   out_774523308631420790[45] = 0;
   out_774523308631420790[46] = 0;
   out_774523308631420790[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_774523308631420790[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_774523308631420790[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_774523308631420790[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_774523308631420790[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_774523308631420790[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_774523308631420790[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_774523308631420790[54] = 0;
   out_774523308631420790[55] = 0;
   out_774523308631420790[56] = 0;
   out_774523308631420790[57] = 0;
   out_774523308631420790[58] = 0;
   out_774523308631420790[59] = 0;
   out_774523308631420790[60] = 0;
   out_774523308631420790[61] = 0;
   out_774523308631420790[62] = 0;
   out_774523308631420790[63] = 0;
   out_774523308631420790[64] = 0;
   out_774523308631420790[65] = 0;
}
void h_14(double *state, double *unused, double *out_7728031144715738627) {
   out_7728031144715738627[0] = state[10];
   out_7728031144715738627[1] = state[11];
   out_7728031144715738627[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5476193320273511079) {
   out_5476193320273511079[0] = 0;
   out_5476193320273511079[1] = 0;
   out_5476193320273511079[2] = 0;
   out_5476193320273511079[3] = 0;
   out_5476193320273511079[4] = 0;
   out_5476193320273511079[5] = 0;
   out_5476193320273511079[6] = 0;
   out_5476193320273511079[7] = 0;
   out_5476193320273511079[8] = 0;
   out_5476193320273511079[9] = 0;
   out_5476193320273511079[10] = 1;
   out_5476193320273511079[11] = 0;
   out_5476193320273511079[12] = 0;
   out_5476193320273511079[13] = 0;
   out_5476193320273511079[14] = 0;
   out_5476193320273511079[15] = 0;
   out_5476193320273511079[16] = 0;
   out_5476193320273511079[17] = 0;
   out_5476193320273511079[18] = 0;
   out_5476193320273511079[19] = 0;
   out_5476193320273511079[20] = 0;
   out_5476193320273511079[21] = 0;
   out_5476193320273511079[22] = 0;
   out_5476193320273511079[23] = 0;
   out_5476193320273511079[24] = 0;
   out_5476193320273511079[25] = 0;
   out_5476193320273511079[26] = 0;
   out_5476193320273511079[27] = 0;
   out_5476193320273511079[28] = 0;
   out_5476193320273511079[29] = 0;
   out_5476193320273511079[30] = 0;
   out_5476193320273511079[31] = 0;
   out_5476193320273511079[32] = 0;
   out_5476193320273511079[33] = 1;
   out_5476193320273511079[34] = 0;
   out_5476193320273511079[35] = 0;
   out_5476193320273511079[36] = 0;
   out_5476193320273511079[37] = 0;
   out_5476193320273511079[38] = 0;
   out_5476193320273511079[39] = 0;
   out_5476193320273511079[40] = 0;
   out_5476193320273511079[41] = 0;
   out_5476193320273511079[42] = 0;
   out_5476193320273511079[43] = 0;
   out_5476193320273511079[44] = 0;
   out_5476193320273511079[45] = 0;
   out_5476193320273511079[46] = 0;
   out_5476193320273511079[47] = 0;
   out_5476193320273511079[48] = 0;
   out_5476193320273511079[49] = 0;
   out_5476193320273511079[50] = 0;
   out_5476193320273511079[51] = 0;
   out_5476193320273511079[52] = 0;
   out_5476193320273511079[53] = 0;
   out_5476193320273511079[54] = 0;
   out_5476193320273511079[55] = 0;
   out_5476193320273511079[56] = 1;
   out_5476193320273511079[57] = 0;
   out_5476193320273511079[58] = 0;
   out_5476193320273511079[59] = 0;
   out_5476193320273511079[60] = 0;
   out_5476193320273511079[61] = 0;
   out_5476193320273511079[62] = 0;
   out_5476193320273511079[63] = 0;
   out_5476193320273511079[64] = 0;
   out_5476193320273511079[65] = 0;
}
void h_33(double *state, double *unused, double *out_5981138783616953205) {
   out_5981138783616953205[0] = state[16];
   out_5981138783616953205[1] = state[17];
   out_5981138783616953205[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6694521338054166202) {
   out_6694521338054166202[0] = 0;
   out_6694521338054166202[1] = 0;
   out_6694521338054166202[2] = 0;
   out_6694521338054166202[3] = 0;
   out_6694521338054166202[4] = 0;
   out_6694521338054166202[5] = 0;
   out_6694521338054166202[6] = 0;
   out_6694521338054166202[7] = 0;
   out_6694521338054166202[8] = 0;
   out_6694521338054166202[9] = 0;
   out_6694521338054166202[10] = 0;
   out_6694521338054166202[11] = 0;
   out_6694521338054166202[12] = 0;
   out_6694521338054166202[13] = 0;
   out_6694521338054166202[14] = 0;
   out_6694521338054166202[15] = 0;
   out_6694521338054166202[16] = 1;
   out_6694521338054166202[17] = 0;
   out_6694521338054166202[18] = 0;
   out_6694521338054166202[19] = 0;
   out_6694521338054166202[20] = 0;
   out_6694521338054166202[21] = 0;
   out_6694521338054166202[22] = 0;
   out_6694521338054166202[23] = 0;
   out_6694521338054166202[24] = 0;
   out_6694521338054166202[25] = 0;
   out_6694521338054166202[26] = 0;
   out_6694521338054166202[27] = 0;
   out_6694521338054166202[28] = 0;
   out_6694521338054166202[29] = 0;
   out_6694521338054166202[30] = 0;
   out_6694521338054166202[31] = 0;
   out_6694521338054166202[32] = 0;
   out_6694521338054166202[33] = 0;
   out_6694521338054166202[34] = 0;
   out_6694521338054166202[35] = 0;
   out_6694521338054166202[36] = 0;
   out_6694521338054166202[37] = 0;
   out_6694521338054166202[38] = 0;
   out_6694521338054166202[39] = 1;
   out_6694521338054166202[40] = 0;
   out_6694521338054166202[41] = 0;
   out_6694521338054166202[42] = 0;
   out_6694521338054166202[43] = 0;
   out_6694521338054166202[44] = 0;
   out_6694521338054166202[45] = 0;
   out_6694521338054166202[46] = 0;
   out_6694521338054166202[47] = 0;
   out_6694521338054166202[48] = 0;
   out_6694521338054166202[49] = 0;
   out_6694521338054166202[50] = 0;
   out_6694521338054166202[51] = 0;
   out_6694521338054166202[52] = 0;
   out_6694521338054166202[53] = 0;
   out_6694521338054166202[54] = 0;
   out_6694521338054166202[55] = 0;
   out_6694521338054166202[56] = 0;
   out_6694521338054166202[57] = 0;
   out_6694521338054166202[58] = 0;
   out_6694521338054166202[59] = 0;
   out_6694521338054166202[60] = 0;
   out_6694521338054166202[61] = 0;
   out_6694521338054166202[62] = 1;
   out_6694521338054166202[63] = 0;
   out_6694521338054166202[64] = 0;
   out_6694521338054166202[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2021545193082224962) {
  H(in_vec, out_2021545193082224962);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_683457954489119670) {
  err_fun(nom_x, delta_x, out_683457954489119670);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2290656940267729341) {
  inv_err_fun(nom_x, true_x, out_2290656940267729341);
}
void live_H_mod_fun(double *state, double *out_1415390971775915258) {
  H_mod_fun(state, out_1415390971775915258);
}
void live_f_fun(double *state, double dt, double *out_4752873359450517443) {
  f_fun(state,  dt, out_4752873359450517443);
}
void live_F_fun(double *state, double dt, double *out_2579228032140110114) {
  F_fun(state,  dt, out_2579228032140110114);
}
void live_h_4(double *state, double *unused, double *out_2936653668917254183) {
  h_4(state, unused, out_2936653668917254183);
}
void live_H_4(double *state, double *unused, double *out_5235003673643920434) {
  H_4(state, unused, out_5235003673643920434);
}
void live_h_9(double *state, double *unused, double *out_7728031144715738627) {
  h_9(state, unused, out_7728031144715738627);
}
void live_H_9(double *state, double *unused, double *out_5476193320273511079) {
  H_9(state, unused, out_5476193320273511079);
}
void live_h_10(double *state, double *unused, double *out_3605403209797755241) {
  h_10(state, unused, out_3605403209797755241);
}
void live_H_10(double *state, double *unused, double *out_6549190697710806901) {
  H_10(state, unused, out_6549190697710806901);
}
void live_h_12(double *state, double *unused, double *out_2198153258387525618) {
  h_12(state, unused, out_2198153258387525618);
}
void live_H_12(double *state, double *unused, double *out_8192283992033669387) {
  H_12(state, unused, out_8192283992033669387);
}
void live_h_35(double *state, double *unused, double *out_6692132050259859426) {
  h_35(state, unused, out_6692132050259859426);
}
void live_H_35(double *state, double *unused, double *out_8601665731016527810) {
  H_35(state, unused, out_8601665731016527810);
}
void live_h_32(double *state, double *unused, double *out_644450187701719295) {
  h_32(state, unused, out_644450187701719295);
}
void live_H_32(double *state, double *unused, double *out_1686801227322411454) {
  H_32(state, unused, out_1686801227322411454);
}
void live_h_13(double *state, double *unused, double *out_1048110653605419057) {
  h_13(state, unused, out_1048110653605419057);
}
void live_H_13(double *state, double *unused, double *out_774523308631420790) {
  H_13(state, unused, out_774523308631420790);
}
void live_h_14(double *state, double *unused, double *out_7728031144715738627) {
  h_14(state, unused, out_7728031144715738627);
}
void live_H_14(double *state, double *unused, double *out_5476193320273511079) {
  H_14(state, unused, out_5476193320273511079);
}
void live_h_33(double *state, double *unused, double *out_5981138783616953205) {
  h_33(state, unused, out_5981138783616953205);
}
void live_H_33(double *state, double *unused, double *out_6694521338054166202) {
  H_33(state, unused, out_6694521338054166202);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
